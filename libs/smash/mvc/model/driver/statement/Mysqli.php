<?php
/**
 * 
 * Generated by
 * Smash Framework Commentator
 * with PHP Version 5.3.4
 * 
 *  DESCRIPTION
 * Smash Framework is a Open Source PHP web framework to make it easier, efficient and more fun to create web applications.
 * 
 *  LICENSE
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author      Joel Denke <mail@happyness.se>
 * @category    Smash - Smash Makes A Sweet Harmony
 * @copyright   (C) 2011 Joel Denke
 * @license     http://www.opensource.org/licenses/gpl-3.0.html - GNU General Public License version 3
 * @version     alpha 0.1
 */
	namespace Smash\Mvc\Model\Driver\Statement;

	/**
	 * Description goes here ...
	 * 
	 * @namespace    Smash\Mvc\Model\Driver\Statement
	 * @interfaces   Smash\Mvc\Model\Driver\Statement\Surface
	 * @package      Mysqli
	 * @author       Joel Denke <mail@happyness.se>
	 * @license      http://www.opensource.org/licenses/gpl-3.0.html - GNU General Public License version 3
	 */
	class Mysqli implements Surface
	{
		private $driver;

		private $sqlPrepare;
		private $sql;

		private $result = null;

		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 * @param    $driver (required)
		 */
		public function __construct($driver)
		{
			$this->driver = $driver;
		}

		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 * @param    $sql (required)
		 */
		public function prepare($sql)
		{
			$this->sqlPrepare = $sql;
			return $this;
		}

		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 */
		public function execute()
		{
			$data = array($this->sqlPrepare);

			if (func_num_args() > 0) {
				if (is_array(func_get_arg(0))) {
					$params = func_get_arg(0);
				} else {
					$params = func_get_args();
				}

				foreach ($params as $param) {
					$data[] = $this->driver->quote($param);
				}
			}

			$this->sql    = call_user_func_array('sprintf', $data);
			$this->result = $this->driver->query($this->sql);

			if ($this->result instanceof \Smash\Mvc\Model\Result) {
				return $this->result;
			} else if (is_int($this->result)) {
				return $this->result;
			} else {
				return false;
			}
		}

		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 */
		public function getLastPreparedQuery()
		{
			return $this->sqlPrepare;
		}

		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 */
		public function getLastQuery()
		{
			return $this->sql;
		}
	}
?>