<?php
/**
 * 
 * Generated by
 * Smash Framework Commentator
 * with PHP Version 5.3.4
 * 
 *  DESCRIPTION
 * Smash Framework is a Open Source PHP web framework to make it easier, efficient and more fun to create web applications.
 * 
 *  LICENSE
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author      Joel Denke <mail@happyness.se>
 * @category    Smash - Smash Makes A Sweet Harmony
 * @copyright   (C) 2011 Joel Denke
 * @license     http://www.opensource.org/licenses/gpl-3.0.html - GNU General Public License version 3
 * @version     alpha 0.1
 */
	namespace Smash\Mvc\View\Helper\Form\Decorator;

	use	Smash\Mvc\View\Helper\Form\Container,
		Smash\Core;

	/**
	 * Description goes here ...
	 * 
	 * @namespace   Smash\Mvc\View\Helper\Form\Decorator
	 * @uses        Smash\Mvc\View\Helper\Form\Container,  Smash\Core
	 * @extends     Smash\Mvc\View\Helper\Form\Decorator\Abstraction
	 * @package     Elements
	 * @author      Joel Denke <mail@happyness.se>
	 * @license     http://www.opensource.org/licenses/gpl-3.0.html - GNU General Public License version 3
	 */
	class Elements extends Abstraction
	{
		/**
		 * Description goes here ...
		 * 
		 * @access   public
		 * @param    $xml (XMLWriter Object, required)
		 * @param    $decorator (required)
		 */
		public function processNext(\XMLWriter $xml, $decorator)
		{
			$form = $decorator->form;
			$dtdd = $decorator->wrapper;
			$open = false;

			foreach ($form as $name => $order) {
				$element = $form->get($name);
				
				if ($dtdd instanceof Dtdd) {
					$elementsClass  = $dtdd->getOption('elementsClass', 'elements');
					$containerClass = $dtdd->getOption('containerClass', $name);
					
					if ($element instanceof Container) {
						/**
						 * Description goes here ...
						 * 
						 * @access   public
						 * @param    $decorator (Smash\Mvc\View\Helper\Form\Decorator Object, required)
						 * @param    $element (required)
						 * @param    $attributes (Array, required)
						 * @param    $options (required)
						 * @param    $tag (optional)
						 */
						if ($open) {
							$xml->endElement();
						}
						
						$xml->startElement('dl');
						$decorator->writeAttributes($xml, array('class' => $containerClass));
						$dtdd->wrapElement($xml, $element);
						$xml->endElement();
						
						$open = false;
					} else {
						if (!$open) {
							$open = true;
							$xml->startElement('dl');
							$decorator->writeAttributes($xml, array('class' => $elementsClass));
						}
						
						$dtdd->wrapElement($xml, $element);
					}
				} else {
					if ($open) {
						/**
						 * Description goes here ...
						 * 
						 * @access   public
						 * @param    $property (required)
						 */
						$xml->endElement();
					}

					$element->process($xml);
				}
			}
			
			if ($open) {
				$xml->endElement();
			}
			
			$decorator->processNext($xml);
		}
	}
?>